#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 50   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td_comma: td_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COMMA";
            #binding-cells = <0>;
            bindings = <&mt LEFT_ALT COMMA>, <&kp MINUS>;

            tapping-term-ms = <180>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
        };

        LongHT: LongHT {
            compatible = "zmk,behavior-hold-tap";
            label = "LONGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        MouseHT: MouseHT {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSEHT";
            bindings = <&kp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        quickSK: quickSK {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICKSK";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Back {
            bindings = <&kp LA(LEFT)>;
            key-positions = <2 15>;
        };

        Forward {
            bindings = <&kp LA(RIGHT)>;
            key-positions = <15 30>;
        };

        Del1 {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
        };

        Del2 {
            bindings = <&kp DELETE>;
            key-positions = <4 5>;
        };

        AltTab {
            bindings = <&kp LA(TAB)>;
            key-positions = <4 18>;
        };

        Mouse1 {
            bindings = <&mkp MB1>;
            key-positions = <26 40>;
        };

        Mouse2 {
            bindings = <&mkp MB2>;
            key-positions = <11 26>;
        };

        Mouse3 {
            bindings = <&mkp MB3>;
            key-positions = <40 39>;
        };

        SemiColon {
            bindings = <&kp SEMICOLON>;
            key-positions = <8 9>;
        };

        Colon {
            bindings = <&kp COLON>;
            key-positions = <9 10>;
        };

        QwertyLayer {
            bindings = <&to 1>;
            key-positions = <1 2 3>;
        };

        ColemakLayer {
            bindings = <&to 0>;
            key-positions = <1 2 3>;
            layers = <1>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <18 33>;
        };

        QBALCMLinks {
            bindings = <&ALCMLinks>;
            key-positions = <1 5>;
        };
    };

    macros {
        ALCMLinks: ALCMLinks {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LC(L)>,
                <&macro_wait_time 200>,
                <&kp LS(Z) &kp COLON &kp BSLH &kp LS(A) &kp LS(L) &kp LS(C) &kp LS(M) &kp SPACE &kp LS(L) &kp I &kp N &kp K &kp S>;

            label = "ALCMLINKS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha1 {
            display-name = "COLEMK";
            bindings = <
&none  &kp Q  &lt 5 W  &kp F           &kp P                         &kp B                                       &kp UP                        &kp J           &kp L       &kp U      &kp Y                   &ht LC(BACKSPACE) BACKSPACE  &none
&none  &kp A  &kp R    &lt 2 S         &lt 4 T                       &kp G                     &kp LG(LC(LEFT))  &kp ENTER  &kp LC(LG(RIGHT))  &kp M           &lt 4 N     &lt 2 E    &kp I                   &kp O                        &none
&none  &kp Z  &lt 5 X  &ht LEFT_ALT C  &ht LEFT_GUI D                &kp V            &none                      &kp DOWN                      &kp K           &ht LWIN H  &td_comma  &ht EXCLAMATION PERIOD  &ht QUESTION SLASH           &none
                       &none           &ht LA(LC(LEFT_SHIFT)) SPACE  &mt LCTRL ENTER                                                           &quickSK LSHFT  &lt 3 TAB   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        alpha2 {
            display-name = "QWERTY";
            bindings = <
&none  &kp Q  &lt 5 W  &kp E           &kp R                       &kp T                               &kp UP                &kp Y           &kp U       &kp I      &kp O                   &ht LC(BACKSPACE) BACKSPACE  &none
&none  &kp A  &kp S    &lt 2 D         &lt 4 F                     &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H           &lt 4 J     &lt 2 K    &kp L                   &kp P                        &none
&none  &kp Z  &lt 5 X  &ht LEFT_ALT C  &ht LEFT_GUI V              &kp B            &none              &kp DOWN              &kp N           &ht LWIN M  &td_comma  &ht EXCLAMATION PERIOD  &ht QUESTION SLASH           &none
                       &none           &ht LA(LC(LEFT_ALT)) SPACE  &mt LCTRL ENTER                                           &quickSK LSHFT  &lt 3 TAB   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        nav {
            display-name = "NAV";
            bindings = <
&trans  &LongHT LA(F4) ESC        &msc SCRL_UP        &mmv MOVE_UP            &msc SCRL_DOWN              &msc SCRL_LEFT                                               &mmv MOVE_UP                     &kp HOME   &kp PAGE_UP  &kp UP_ARROW  &kp PAGE_DOWN  &trans                      &trans
&trans  &mt LA(LC(TAB)) TAB       &mmv MOVE_LEFT      &mmv MOVE_DOWN          &mmv MOVE_RIGHT             &msc SCRL_RIGHT                              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp END    &kp LEFT     &kp DOWN      &kp RIGHT      &ht LC(LS(NUMBER_3)) ENTER  &trans
&trans  &MouseHT LEFT_SHIFT MCLK  &MouseHT LWIN RCLK  &ht LEFT_ALT LC(LA(V))  &mkp LCLK                   &LongHT LC(LA(DELETE)) DELETE  &kp C_MUTE                    &mmv MOVE_DOWN                   &mkp RCLK  &mkp LCLK    &none         &none          &none                       &trans
                                                      &trans                  &ht LC(LS(NUMBER_3)) SPACE  &trans                                                                                        &trans     &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH                 &kp DLLR           &kp PRCNT                                &mmv MOVE_UP                     &kp CARET       &kp AMPS              &kp ASTRK              &kp TILDE         &trans        &trans
&trans  &kp TAB    &kp EQUAL  &kp MINUS                &kp SQT            &kp BACKSLASH            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp ENTER     &trans
&trans  &kp GRAVE  &kp PLUS   &mt LEFT_ALT UNDERSCORE  &kp DOUBLE_QUOTES  &kp PIPE       &trans                    &mmv MOVE_DOWN                   &kp LESS_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp QUESTION  &trans
                              &trans                   &trans             &trans                                                                    &trans          &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        numFn {
            display-name = "NUM";
            bindings = <
&trans  &LongHT LA(F4) ESCAPE  &ht F12 F6    &ht F11 F5    &ht F10 F4    &kp C_VOLUME_UP                             &mmv MOVE_UP                     &kp MINUS          &kp N7        &kp N8        &kp N9        &trans           &trans
&trans  &trans                 &ht F9 F3     &ht F8 F2     &ht F7 F1     &kp C_VOLUME_DOWN           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &ht EQUAL ENTER  &trans
&trans  &kp SLASH              &kp ASTERISK  &sk LEFT_ALT  &sk LEFT_GUI  &kp C_MUTE         &none                    &mmv MOVE_DOWN                   &trans             &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD       &trans
                                             &trans        &trans        &trans                                                                       &ht LEFT_SHIFT N0  &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        app {
            bindings = <
&trans  &kp LG(N7)        &trans  &kp LG(N8)        &kp LG(N9)        &kp LS(LG(S))                    &trans          &trans  &bt BT_CLR_ALL   &bt BT_NXT       &bt BT_PRV       &trans           &trans
&trans  &kp LG(NUMBER_4)  &trans  &kp LG(N5)        &kp LG(NUMBER_6)  &trans                   &trans  &trans  &trans  &trans  &trans           &kp CAPSLOCK     &trans           &trans           &trans
&trans  &kp LG(NUMBER_1)  &trans  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LA(TAB)    &trans            &trans          &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans
                                  &trans            &sk LEFT_GUI      &trans                                           &trans  &trans           &trans
            >;

            label = "APP";
        };
    };
};
